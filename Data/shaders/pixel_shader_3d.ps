///////////////////////////////
// Filename: pixel_shader_3d.ps //
///////////////////////////////

/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
	float3 normal : NORMAL;
	float2 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 PixelShader3D(PixelInputType input) : SV_TARGET
{
	float4 outputColor;

	// Sample the pixel color from the texture using the sampler at this texture coordinate location.
    float4 textureColor;
    textureColor = shaderTexture.Sample(SampleType, input.tex);

    // Multiply the texture pixel and the final diffuse color to get the final pixel color result.
    outputColor = textureColor; // calculation of diffuse light

    return outputColor;
}